[[!comment format=mdwn
 ip="38.109.115.130"
 claimedauthor="Daniel Kahn Gillmor"
 subject="problems with certificate-based TLS authentication for IRC"
 date="2017-09-11T15:13:56Z"
 content="""
I used to use this approach myself, but i stopped using it a few years
ago, for two reasons:

 * certificate expiration -- when my registered certificate expires, i
   still need to update the server with my new certificate.  to do that,
   i need my password.  so my password still works, and i still have to
   retain it and send it to (what i hope is the correct) nickserv
   service at each cert renewal time.  so this doesn't actually remove
   either my needing to remember/retain/record a password, and it
   doesn't make my remembered/recorded password less powerful.

 * client certificate leakage -- in TLS versions 1.2 and earlier (all
   deployed versions of TLS), the client certificate is exchanged in the
   clear, during the handshake.  (TLS 1.3 will fix this, but it is not yet fully standardized or in deployed production).  This means that client cert
   authentication actually leaks your identity to any passive network
   observer, whereas password-based authentication to nickserv does not.

This pains me, because i generally *strongly* prefer pubkey-based
authentication over password-based authentication.  But in this case, i
think it's not enough of a win overall to make the transition.

What do you think about these tradeoffs?  Are there mitigating factors that i should know about that makes them less troubling?

"""]]
